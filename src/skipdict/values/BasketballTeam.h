/**
 * Automatically generated by Zserio C++ extension version 1.0.
 */

#ifndef SKIPDICT_VALUES_BASKETBALL_TEAM_H
#define SKIPDICT_VALUES_BASKETBALL_TEAM_H

#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/BitFieldUtil.h>
#include <zserio/CppRuntimeException.h>
#include <zserio/StringConvertUtil.h>
#include <zserio/PreWriteAction.h>
#include <string>
#include <zserio/BasicArray.h>
#include <zserio/Types.h>

namespace skipdict
{
namespace values
{

class BasketballTeam
{
public:
    BasketballTeam();
    BasketballTeam(zserio::BitStreamReader& _in);

    uint8_t getOnField() const;
    void setOnField(uint8_t onField);

    zserio::StringArray& getPlayersOnField();
    const zserio::StringArray& getPlayersOnField() const;
    void setPlayersOnField(const zserio::StringArray& PlayersOnField);

    zserio::StringArray& getPlayersOnBench();
    const zserio::StringArray& getPlayersOnBench() const;
    void setPlayersOnBench(const zserio::StringArray& PlayersOnBench);

    size_t bitSizeOf(size_t _bitPosition = 0) const;
    size_t initializeOffsets(size_t _bitPosition);

    bool operator==(const BasketballTeam& other) const;
    int hashCode() const;

    void read(zserio::BitStreamReader& _in);
    void write(zserio::BitStreamWriter& _out,
            zserio::PreWriteAction _preWriteAction = zserio::ALL_PRE_WRITE_ACTIONS);

private:
    void checkConstraints();

    uint8_t m_onField;
    zserio::StringArray m_PlayersOnField;
    zserio::StringArray m_PlayersOnBench;
};

} // namespace values
} // namespace skipdict

#endif // SKIPDICT_VALUES_BASKETBALL_TEAM_H
