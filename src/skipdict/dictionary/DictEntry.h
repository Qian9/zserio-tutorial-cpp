/**
 * Automatically generated by Zserio C++ extension version 1.0.
 */

#ifndef SKIPDICT_DICTIONARY_DICT_ENTRY_H
#define SKIPDICT_DICTIONARY_DICT_ENTRY_H

#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/BitFieldUtil.h>
#include <zserio/CppRuntimeException.h>
#include <zserio/StringConvertUtil.h>
#include <zserio/PreWriteAction.h>
#include <zserio/BitFieldArray.h>
#include <zserio/Types.h>

namespace skipdict
{
namespace dictionary
{

class DictEntry
{
public:
    DictEntry();
    DictEntry(zserio::BitStreamReader& _in);

    uint8_t getTypeCode() const;
    void setTypeCode(uint8_t typeCode);

    zserio::UInt8Array& getValue();
    const zserio::UInt8Array& getValue() const;
    void setValue(const zserio::UInt8Array& value);

    size_t bitSizeOf(size_t _bitPosition = 0) const;
    size_t initializeOffsets(size_t _bitPosition);

    bool operator==(const DictEntry& other) const;
    int hashCode() const;

    void read(zserio::BitStreamReader& _in);
    void write(zserio::BitStreamWriter& _out,
            zserio::PreWriteAction _preWriteAction = zserio::ALL_PRE_WRITE_ACTIONS);

private:
    uint8_t m_typeCode;
    zserio::UInt8Array m_value;
};

} // namespace dictionary
} // namespace skipdict

#endif // SKIPDICT_DICTIONARY_DICT_ENTRY_H
