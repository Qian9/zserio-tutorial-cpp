/**
 * Automatically generated by Zserio C++ extension version 1.0.
 */

#ifndef TUTORIAL_EMPLOYEE_H
#define TUTORIAL_EMPLOYEE_H

#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/BitFieldUtil.h>
#include <zserio/CppRuntimeException.h>
#include <zserio/StringConvertUtil.h>
#include <zserio/PreWriteAction.h>
#include <string>
#include <zserio/ObjectArray.h>
#include <zserio/OptionalHolder.h>
#include <zserio/Types.h>

#include "tutorial/Experience.h"
#include "tutorial/Role.h"

namespace tutorial
{

class Employee
{
public:
    Employee();
    Employee(zserio::BitStreamReader& _in);

    uint8_t getAge() const;
    void setAge(uint8_t age);

    std::string& getName();
    const std::string& getName() const;
    void setName(const std::string& name);

    uint16_t getSalary() const;
    void setSalary(uint16_t salary);

    uint16_t getBonus() const;
    void setBonus(uint16_t bonus);
    bool hasBonus() const;

    tutorial::Role getRole() const;
    void setRole(tutorial::Role role);

    zserio::ObjectArray<tutorial::Experience>& getSkills();
    const zserio::ObjectArray<tutorial::Experience>& getSkills() const;
    void setSkills(const zserio::ObjectArray<tutorial::Experience>& skills);
    bool hasSkills() const;

    size_t bitSizeOf(size_t _bitPosition = 0) const;
    size_t initializeOffsets(size_t _bitPosition);

    bool operator==(const Employee& other) const;
    int hashCode() const;

    void read(zserio::BitStreamReader& _in);
    void write(zserio::BitStreamWriter& _out,
            zserio::PreWriteAction _preWriteAction = zserio::ALL_PRE_WRITE_ACTIONS);

private:
    void checkConstraints();

    uint8_t m_age;
    std::string m_name;
    uint16_t m_salary;
    zserio::InPlaceOptionalHolder<uint16_t> m_bonus;
    tutorial::Role m_role;
    zserio::OptimizedOptionalHolder<zserio::ObjectArray<tutorial::Experience> > m_skills;
};

} // namespace tutorial

#endif // TUTORIAL_EMPLOYEE_H
