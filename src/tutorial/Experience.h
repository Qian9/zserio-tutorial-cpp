/**
 * Automatically generated by Zserio C++ extension version 1.0.
 */

#ifndef TUTORIAL_EXPERIENCE_H
#define TUTORIAL_EXPERIENCE_H

#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/BitFieldUtil.h>
#include <zserio/CppRuntimeException.h>
#include <zserio/StringConvertUtil.h>
#include <zserio/PreWriteAction.h>
#include <zserio/Types.h>

#include "tutorial/Language.h"

namespace tutorial
{

class Experience
{
public:
    Experience();
    Experience(zserio::BitStreamReader& _in);

    uint8_t getYearsOfExperience() const;
    void setYearsOfExperience(uint8_t yearsOfExperience);

    tutorial::Language getProgrammingLanguage() const;
    void setProgrammingLanguage(tutorial::Language programmingLanguage);

    size_t bitSizeOf(size_t _bitPosition = 0) const;
    size_t initializeOffsets(size_t _bitPosition);

    bool operator==(const Experience& other) const;
    int hashCode() const;

    void read(zserio::BitStreamReader& _in);
    void write(zserio::BitStreamWriter& _out,
            zserio::PreWriteAction _preWriteAction = zserio::ALL_PRE_WRITE_ACTIONS);

private:
    uint8_t m_yearsOfExperience;
    tutorial::Language m_programmingLanguage;
};

} // namespace tutorial

#endif // TUTORIAL_EXPERIENCE_H
